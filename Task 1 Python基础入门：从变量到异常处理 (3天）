2020年09月06日
通过AI训练营python——阿里云天池提供的任务1学习素材，在此记录之前未了解的知识点及相关知识点总结。

注释：
#作用于多行，'''作用于多行

运算符：
比较运算符：>,>=,<,<=,==,!= (大于,大于等于,小于,小于等于,等于,不等于)
逻辑运算符：and,or,not (与，或，非)
位运算符：~,&,`,^,<<,>> (按位取反,按位与,按位或,按位异或,左移,右移)   ???
其他运算符：in,not in,is,is not (存在，不存在，是，不是)
注：is,is not两者比较变量内存地址，而==,!=则是比较变量的值，当变量为地址不可类型时，两者等价
运算符优先级：
一元运算符优于二元运算符；先算术运算，后移位运算，最后位运算；逻辑运算最后结合。

拓展：
运算符分类方式：主要分两大类，一种是按操作数，另一种按照功能。而一元运算符，二元运算符，三元运算符是按照操作数分类的运算符。
此处的“元”是表示“元素”、“操作数”的意思。如：
+1：+是运算符，1是运算元或是操作数，因为只有1个运算元，所以+1是一元运算符（注：1++，也是一元运算符）
2>=1：2是运算元，>=是比较运算符，1是运算元，因为有2个运算元，所以是二元运算符
(a>10)?ture:false：如果a大于10为真，则执行true，反之执行false
	(a>10)      ?     ture     :    false
	运算元    运算符  运算元  运算符  运算元
共有3个运算元，所以是三元运算符。


位运算：
1）原码：即二进制表示，从左往右数第一位是符号位，0表示正数，1表示负数，如：
00 00 00 11  对应3的原码
10 00 00 11  对应-3的原码
2）反码：正数的反码是原码，负数的反码是符号位不变，其余位按照对应正数位取反，如：
00 00 00 11  对应3的反码，与原码相同
11 11 11 00  对应-3的反码
3）补码：计算机内部使用，正数的补码是原码，负数的补码是反码+1
00 00 00 11  对应3的补码，与原码、反码相同
11 11 11 01  对应-3的补码

按位运算有待深入理解后添加

数据类型：
分别是int,float,bool
type(object): 获取object是整型、浮点型还是布尔型
dir(object): 不加object时表示获得当前模块的属性列表，加object时表示获得object的属性、方法列表。
decimal: 设置小数精度

type(): 不认为子类是一种父类类型，不考虑继承关系
isinstance()：会认为子类是一种父类类型，考虑继承关系，推荐用该法判断两个类型是否相同

print()：默认end="\n",即可设置end参数来控制输出字符串间的分割字符

while/for-else循环：当while/for正常执行完后，执行else输出，若while/for循环中执行了跳出循环的语句如break,则else处的代码不执行
注：break跳出当前所在层的循环，continue终止本轮循环并开始下一循环，pass不做任何处理，占位作用，保持程序结构完整性。

enumerate(可迭代对象，下标起始位置-默认0开始): 与for循环结合使用。
for i,a in enumerate(A) 
    do something








